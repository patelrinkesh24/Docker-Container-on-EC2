name: Push To ECR

on:
  push:
    branches: [ "main" ]



jobs:
  build:
    name: Building Image
    runs-on: ubuntu-latest

    steps:
      - name: Check out code 
        uses: actions/checkout@v2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        env: 
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_REGION: us-east-1

      - name: Building , Testing, Tagging, and push cats image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: cats-assignment1
          IMAGE_TAG: updated
        run: |
          cd docker-images/cats/
          ls -ltra
          # Dokcer build
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          # unit test
          docker run -d -p 80:80 $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker ps
          echo "Pause for 10 seconds to let container start"
          sleep 10
          curl localhost:80 -vvv
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          
      - name: Building, Testing, Tagging, and push dogs image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: dogs-assignment1
          IMAGE_TAG: updated
        run: |
          cd docker-images/dogs/
          ls -ltra
          # Dokcer build
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          # unit test
          docker run -d -p 81:80 $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker ps
          echo "Pause for 10 seconds to let container start"
          sleep 10
          curl localhost:81 -vvv
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
